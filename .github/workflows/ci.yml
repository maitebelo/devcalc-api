name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
    paths:
      - 'src/**'
  pull_request:
    branches:
      - main
      - dev
    paths:
      - 'src/**'
  workflow_dispatch:
    inputs:
      run_tests:
        type: boolean
        required: false
        default: true
        description: 'Quer rodar os testes?'
      run_lint:
        type: boolean
        required: false
        default: true
        description: 'Quer rodar o verificador de código?'

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  build:
    runs-on: self-hosted
    needs: checkout
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Build Maven project
        run: mvn clean install -DskipTests

  test:
    needs: build
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.run_tests == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Run tests
        run: mvn test

  lint:
    needs: build
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.run_lint == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Super-Linter
        uses: super-linter/super-linter@v7.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_JAVA: true
          VALIDATE_MARKDOWN: true
          VALIDATE_ALL_CODEBASE: true
          DISABLE_ERRORS: true
          LOG_LEVEL: DEBUG

  package:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: ${{ always() && (needs.test.result == 'success' || needs.test.result == 'skipped') && (needs.lint.result == 'success' || needs.lint.result == 'skipped') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Create package
        run: mvn clean package -DskipTests

  deploy-dev:
    runs-on: ubuntu-latest
    needs: package
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    environment:
      name: dev
    steps:
      - name: Deploy package
        run: |
          echo Preparando o deploy... Utilizando variável de dev: ${{ vars.DEV_ENV }}
          echo Criando o deploy... Utilizando segredo de dev: ${{ secrets.DEV_SECRET }}
          echo Deploy realizado com sucesso

  deploy-prod:
    runs-on: ubuntu-latest
    needs: package
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: prod
    steps:
      - name: Deploy package
        run: |
          echo Preparando o deploy... Utilizando variável de prod: ${{ vars.PROD_ENV }}
          echo Criando o deploy... Utilizando segredo de prod: ${{ secrets.PROD_SECRET }}
          echo Deploy realizado com sucesso
